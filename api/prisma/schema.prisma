// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id       String  @id @default(cuid())
  name     String?
  email    String  @unique
  password String
  role     Role    @default(USER)
}

enum Role {
  USER
  ADMIN
  SUPERUSER
}

enum EstadoCliente {
  ACTIVO
  INACTIVO
}

enum TipoDocumento {
  NIT
  CC
  CE
  TI
  PASAPORTE
}

enum EstadoPedido {
  PENDIENTE
  DESPACHADO
  EN_TRANSITO
  ENTREGADO
  CANCELADO
  APLAZADO
  DEVUELTO
}

enum UnidadMedida {
  // Unidades de conteo
  UND // Unidad
  
  // Unidades de masa
  MG  // Miligramo
  GR  // Gramo
  KG  // Kilogramo
  LB  // Libra
  TON // Tonelada
  
  // Unidades de volumen
  ML  // Mililitro
  L   // Litro
  M3  // Metro cúbico
  GAL // Galón
  ONZ // Onza líquida
  
  // Unidades de longitud
  MM  // Milímetro
  CM  // Centímetro
  M   // Metro
  MTS // Metros (redundante con Mpodría eliminarse)
  PULG// Pulgada
  PIES// Pies
  
  // Unidades de superficie
  M2  // Metro cuadrado
  
  // Unidades de cocina
  TAZA// Taza
  CDA // Cucharada
  CTA   // Cucharadita
}


model Cliente {
  id             String              @id @default(cuid())
  documento      String              @unique // NIT o número de documento como clave primaria
  tipoDocumento  TipoDocumento       @default(NIT) // Tipo de documento (e.g.NITcédula)
  nombre         String
  idMunicipio    String
  direccion      String
  zonaBarrio     String?
  telefono       String?
  email          String?
  estado         EstadoCliente       @default(ACTIVO)
  inventarios    InventarioCliente[]
  pedidos        Pedido[]
  cotizaciones   Cotizacion[]
  lugaresEntrega LugarEntrega[]
  municipio      Municipio           @relation(fields: [idMunicipio], references: [id])
}

model Proveedor {
  id            String        @id @default(cuid())
  documento     String        @unique // NIT o número de documento como clave primaria
  tipoDocumento TipoDocumento @default(NIT) // Tipo de documento (e.g., NIT, cédula)
  nombre        String
  telefono      String?
  direccion     String        @default("")
  facturaIva    Boolean       @default(false)
  productos     Producto[]
}


model Presentacion {
  id          String   @id @default(cuid())
  nombre      String
  descripcion String?
  productos   Producto[]
}

model Producto {
  id                String              @id @default(cuid())
  nombre            String
  idPresentacion    String
  idProveedor       String
  tipo              String
  pesoVolumen       Float
  precioBase        Float
  unidadMedida      UnidadMedida       @default(UND)
  inventarios       InventarioCliente[]
  detalleCotizacion DetalleCotizacion[]
  detallePedidos    DetallePedido[] // Relación opuesta con DetallePedido
  presentacion      Presentacion       @relation(fields: [idPresentacion], references: [id])
  proveedor         Proveedor          @relation(fields: [idProveedor], references: [id])
}

model InventarioCliente {
  id             String   @id @default(cuid())
  cliente        Cliente  @relation(fields: [idCliente], references: [id])
  idCliente      String
  producto       Producto @relation(fields: [productoId], references: [id])
  productoId     String
  precioEspecial Float
}

model Cotizacion {
  id        String              @id @default(cuid())
  fecha     DateTime            @default(now())
  cliente   Cliente             @relation(fields: [idCliente], references: [id])
  idCliente String
  total     Float
  detalles  DetalleCotizacion[]
}

model DetalleCotizacion {
  id             String     @id @default(cuid())
  cotizacion     Cotizacion @relation(fields: [cotizacionId], references: [id])
  cotizacionId   String
  producto       Producto   @relation(fields: [productoId], references: [id])
  productoId     String
  cantidad       Int
  precioUnitario Float
  subtotal       Float
}

model Pedido {
  id                 String          @id @default(cuid())
  fechaRecibido      DateTime        @default(now())
  idCliente          String
  estado             EstadoPedido    @default(PENDIENTE)
  
  observaciones      String?
  fechaEntrega       DateTime?
  tiempoEntrega      Int?
  pesoDespachado     Float?
  productos          DetallePedido[]
  entregas           Entrega[]
  ordenesCompra      OrdenCompra[] // Relación opuesta con OrdenCompra
  cliente Cliente @relation(fields: [idCliente], references: [id])
}

model DetallePedido {
  id         String   @id @default(cuid())
  pedido     Pedido   @relation(fields: [pedidoId], references: [id])
  pedidoId   String
  producto   Producto @relation(fields: [productoId], references: [id])
  idLugarEntrega String
  lugarEntrega LugarEntrega @relation(fields: [idLugarEntrega], references: [id])
  productoId String
  fechaCreacion DateTime @default(now())
  fechaEntrega DateTime? 
  unidades   Int  @default(0)
  cantidad   Float @default(0)
  total      Float @default(0)
}

model Entrega {
  id              String       @id @default(cuid())
  pedido          Pedido       @relation(fields: [pedidoId], references: [id])
  pedidoId        String
  vehiculoInterno String?
  vehiculoExterno String?
  entregadoPorA   String
  idLugarEntrega  String
  tipoEntrega     String
  remision        String?
  observaciones   String?
  lugarEntrega    LugarEntrega @relation(fields: [idLugarEntrega], references: [id])
}

model LugarEntrega {
  id        String @id @default(cuid())
  idCliente String
  nombre    String
  idCiudad  String
  direccion String
  contacto  String

  activo   Boolean   @default(true)
  cliente  Cliente   @relation(fields: [idCliente], references: [id])
  entregas Entrega[]
  ciudad   Municipio @relation(fields: [idCiudad], references: [id])
  detallesPedidos DetallePedido[] 
  @@index([nombre])
}

model OrdenCompra {
  id                 String   @id @default(cuid())
  pedido             Pedido   @relation(fields: [pedidoId], references: [id])
  pedidoId           String
  numeroOrden        String
  fechaRequerimiento DateTime  @default(now())
  tiempoEntrega      Int       @default(0)
  pesoDespachado     Float     @default(0)
  remision           String?
}

model Municipio {
  id             String       @id @default(cuid())
  nombre         String
  departamento   Departamento @relation(fields: [idDepartamento], references: [id])
  estado         Boolean      @default(true)
  idDepartamento String

  clientes       Cliente[]
  lugaresEntrega LugarEntrega[]

  @@index([nombre])
}

model Departamento {
  id       String      @id @default(cuid())
  nombre   String
  ciudades Municipio[]
  pais     Pais        @relation(fields: [idPais], references: [id])
  idPais   String

  @@index([nombre])
}

model Pais {
  id            String         @id @default(cuid())
  nombre        String
  departamentos Departamento[]

  @@index([nombre])
}
